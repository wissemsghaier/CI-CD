def url
def response
pipeline {
  agent any
  environment {
    GROUP_ID = 'quantum.solutions.io'
    ARTIFACT_ID = 'next-gen-radio'
    COMMIT_ID = '562687f'
    NEXUS_URL = 'http://172.20.0.4:8081'
    REPOSITORY = 'maven-releases'
  }
  stages {
    stage('Check Nexus Tag') {
      steps {
        script {
          url = "${NEXUS_URL}/repository/maven-releases/quantum/solutions/io/next-gen-radio/${COMMIT_ID}/next-gen-radio-${COMMIT_ID}.zip"
          response = sh(script: "curl -sS ${url}", returnStdout: true)
          if (response.contains("${COMMIT_ID}")) {
            echo "Version tag '${COMMIT_ID}' exists in Nexus for artifact '${GROUP_ID}:${ARTIFACT_ID}'"
          } 
          else {
            error "Version tag '${COMMIT_ID}' does not exist in Nexus for artifact '${GROUP_ID}:${ARTIFACT_ID}'"
          }
        }
      }
    }
    stage('pull code from Nexus') {
      steps {
        script {
          url = "${NEXUS_URL}/repository/maven-releases/quantum/solutions/io/next-gen-radio/${COMMIT_ID}/next-gen-radio-${COMMIT_ID}.zip"
          sh "curl -L -o laravel.zip ${url}"
          stash name: 'myStash', includes: 'laravel.zip'  
        }
      }
    }
    stage ('unzip') {
      steps {
        sh "apt-get install unzip"
        unstash 'myStash' 
        sh "unzip -t  laravel.zip"
      } 
    }
    stage('Build Docker Image') {
      steps {
        // clone repository and build Docker image
        sh 'docker build -t laravel:app .'
      }
    }
    stage('Push to Nexus') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'nexus-image', passwordVariable: 'jenkins', usernameVariable: 'jenkins')]) {
          sh "docker login -u $NEXUS_USERNAME -p $NEXUS_PASSWORD http://172.20.0.4:8081"
          sh "docker tag laravel:app http://172.20.0.4:8082/repository/dockerhosted-repo/laravel:app"
          sh "docker push http://172.20.0.3:8082/repository/dockerhosted-repo/laravel:app"
        }
      }
    }
  }
  post {
    always { 
      cleanWs()
    } 
  }
}


